spring.transaction.rollback-on-commit-failure=true
# 扫描包
mybatis-plus.type-aliases-package=com.chuang.anarres.crud.entity,com.chuang.anarres.model
mybatis-plus.mapper-locations=classpath*:/mapper/*.xml
mybatis-plus.type-enums-package=com.chuang.tauceti.support.enums,com.chuang.anarres.crud.enums,com.chuang.anarres.enums
mybatis-plus.global-config.db-config.logic-delete-value=1
mybatis-plus.global-config.db-config.logic-not-delete-value=0
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis-plus.configuration.log-prefix=anarres.dao.log



########### druid

#连接池
spring.datasource.druid.initial-size=20
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=20
spring.datasource.druid.max-wait=60000

spring.datasource.druid.connection-properties=druid.stat.slowSqlMillis=100
spring.datasource.druid.time-between-eviction-runs-millis=60000
spring.datasource.druid.validation-query=SELECT 'x'
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.filters= wall,stat

#配置数据源的日志过滤器
spring.datasource.druid.filter.slf4j.statement-executable-sql-log-enable=true
spring.datasource.druid.filter.slf4j.statement-create-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-prepare-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-prepare-call-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-execute-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-execute-query-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-execute-batch-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-parameter-set-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-close-after-log-enabled=false

# 配置WallFilter 果要修改可参考https://github.com/alibaba/druid/wiki/配置-wallfilter
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=mysql
spring.datasource.druid.filter.wall.config.drop-table-allow=false
spring.datasource.druid.filter.wall.config.truncate-allow=false


#########################################################
#                                                       #
#                   DRUID 监控配置                        #
#                                                       #
#########################################################
# 是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
#以下资源的访问不进行监控
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*,/auth/unauthorized;*,/api/qr/img;*
spring.datasource.druid.web-stat-filter.session-stat-enable=
spring.datasource.druid.web-stat-filter.session-stat-max-count=
spring.datasource.druid.web-stat-filter.principal-session-name=
spring.datasource.druid.web-stat-filter.principal-cookie-name=
spring.datasource.druid.web-stat-filter.profile-enable=
## StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
#是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#是否允许清零监控数据，默认为true
spring.datasource.druid.stat-view-servlet.reset-enable=true
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=anarres@!21
#访问白名单
spring.datasource.druid.stat-view-servlet.allow=
#访问黑名单 优先级高于allow
spring.datasource.druid.stat-view-servlet.deny=
